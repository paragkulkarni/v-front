{"ast":null,"code":"import { environment } from 'src/environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class GeneralService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = environment.url;\n  }\n  sendWordData(data) {\n    console.log(JSON.parse(data));\n    return this.httpClient.post(`${this.url}/share-word`, JSON.parse(data));\n  }\n  sendUserData(data) {\n    console.log(\"req.body.data\", data);\n    return this.httpClient.post(`${this.url}/user`, data);\n  }\n  getWordInfo() {\n    return this.httpClient.get(`${this.url}/share-word`);\n  }\n  userLogout() {\n    return this.httpClient.post(`${this.url}/logout`, {});\n  }\n  static #_ = this.ɵfac = function GeneralService_Factory(t) {\n    return new (t || GeneralService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GeneralService,\n    factory: GeneralService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","GeneralService","constructor","httpClient","url","sendWordData","data","console","log","JSON","parse","post","sendUserData","getWordInfo","get","userLogout","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\parag\\Documents\\python\\fastapi\\v-front\\src\\app\\services\\general\\general.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environment/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeneralService {\n  url = environment.url\n  constructor(private httpClient: HttpClient) {\n  }\n\n  sendWordData(data:any){\n    console.log(JSON.parse(data))\n    return this.httpClient.post(`${this.url}/share-word`, JSON.parse(data))\n  }\n\n  sendUserData(data: any){\n    console.log(\"req.body.data\",data)\n    return this.httpClient.post(`${this.url}/user`, data)\n  }\n\n  getWordInfo(){\n    return this.httpClient.get(`${this.url}/share-word`)\n  }\n\n  userLogout(){\n    return this.httpClient.post(`${this.url}/logout`,{})\n  }\n}\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,6BAA6B;;;AAKzD,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAD9B,KAAAC,GAAG,GAAGJ,WAAW,CAACI,GAAG;EAErB;EAEAC,YAAYA,CAACC,IAAQ;IACnBC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAAC;IAC7B,OAAO,IAAI,CAACH,UAAU,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,GAAG,aAAa,EAAEK,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAAC;EACzE;EAEAM,YAAYA,CAACN,IAAS;IACpBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAACF,IAAI,CAAC;IACjC,OAAO,IAAI,CAACH,UAAU,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,GAAG,OAAO,EAAEE,IAAI,CAAC;EACvD;EAEAO,WAAWA,CAAA;IACT,OAAO,IAAI,CAACV,UAAU,CAACW,GAAG,CAAC,GAAG,IAAI,CAACV,GAAG,aAAa,CAAC;EACtD;EAEAW,UAAUA,CAAA;IACR,OAAO,IAAI,CAACZ,UAAU,CAACQ,IAAI,CAAC,GAAG,IAAI,CAACP,GAAG,SAAS,EAAC,EAAE,CAAC;EACtD;EAAC,QAAAY,CAAA,G;qBArBUf,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdpB,cAAc;IAAAqB,OAAA,EAAdrB,cAAc,CAAAsB,IAAA;IAAAC,UAAA,EAFb;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}