{"ast":null,"code":"import { catchError, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth/auth.service\";\nexport class TokenInterceptorService {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  intercept(req, next) {\n    const {\n      token\n    } = this.authService.token;\n    if (token) {\n      req = req.clone({\n        setHeaders: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n    }\n    return next.handle(req).pipe(catchError(err => {\n      if (err.status === 401) {\n        this.authService.logout();\n      }\n      const error = err.error.message || err.statusText;\n      return throwError(() => new Error(error));\n    }));\n  }\n  static #_ = this.ɵfac = function TokenInterceptorService_Factory(t) {\n    return new (t || TokenInterceptorService)(i0.ɵɵinject(i1.AuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TokenInterceptorService,\n    factory: TokenInterceptorService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["catchError","throwError","TokenInterceptorService","constructor","authService","intercept","req","next","token","clone","setHeaders","Authorization","handle","pipe","err","status","logout","error","message","statusText","Error","_","i0","ɵɵinject","i1","AuthService","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\parag\\Documents\\python\\fastapi\\v-front\\src\\app\\services\\interceptors\\token-interceptor.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable, catchError, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService {\n\n  constructor(private authService: AuthService) { }\n  \n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n      const { token } = this.authService.token;\n      if(token){\n        req = req.clone({\n          setHeaders:{\n            Authorization: `Bearer ${token}`,\n          }\n        })\n      }\n\n      return next.handle(req).pipe(\n        catchError((err:any)=>{\n          if(err.status===401){\n            this.authService.logout();\n          }\n          const error = err.error.message || err.statusText;\n          return throwError(() => new Error(error));\n        })\n      );\n    }\n  \n}\n"],"mappings":"AAGA,SAAqBA,UAAU,EAAEC,UAAU,QAAQ,MAAM;;;AAKzD,OAAM,MAAOC,uBAAuB;EAElCC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAiB;EAE9CC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,MAAM;MAAEC;IAAK,CAAE,GAAG,IAAI,CAACJ,WAAW,CAACI,KAAK;IACxC,IAAGA,KAAK,EAAC;MACPF,GAAG,GAAGA,GAAG,CAACG,KAAK,CAAC;QACdC,UAAU,EAAC;UACTC,aAAa,EAAE,UAAUH,KAAK;;OAEjC,CAAC;;IAGJ,OAAOD,IAAI,CAACK,MAAM,CAACN,GAAG,CAAC,CAACO,IAAI,CAC1Bb,UAAU,CAAEc,GAAO,IAAG;MACpB,IAAGA,GAAG,CAACC,MAAM,KAAG,GAAG,EAAC;QAClB,IAAI,CAACX,WAAW,CAACY,MAAM,EAAE;;MAE3B,MAAMC,KAAK,GAAGH,GAAG,CAACG,KAAK,CAACC,OAAO,IAAIJ,GAAG,CAACK,UAAU;MACjD,OAAOlB,UAAU,CAAC,MAAM,IAAImB,KAAK,CAACH,KAAK,CAAC,CAAC;IAC3C,CAAC,CAAC,CACH;EACH;EAAC,QAAAI,CAAA,G;qBAvBQnB,uBAAuB,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAvBxB,uBAAuB;IAAAyB,OAAA,EAAvBzB,uBAAuB,CAAA0B,IAAA;IAAAC,UAAA,EAFtB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}